within SolarTherm.Validation.Models;

model Thermocline_Arkar_Solidification_76
  package RT20_Paraffin_Slow = SolarTherm.Materials.RT20_Paraffin_Melting;
  package Air = SolarTherm.Materials.Air_Table;

  parameter Integer N_f = 35;
  parameter Integer N_p = 5;
  parameter SI.Length H_tank = 1.52;
  parameter SI.Diameter D_tank = 0.34;
  parameter Real eta = 0.388;
  parameter SI.Length z_f[N_f] = SolarTherm.Models.Storage.Thermocline.Z_position(H_tank,N_f);
  parameter SI.Temperature T_f_start[N_f] = fill(307.494497607655,N_f);
  parameter SI.Temperature h_f_start[N_f] = fill(Air.h_Tf(307.494497607655,0),N_f);
  parameter SI.Temperature T_p_start[N_f,N_p] = fill(fill(307.494497607655,N_p),N_f);
  parameter SI.Temperature h_p_start[N_f,N_p] = fill(fill(RT20_Paraffin_Slow.h_Tf(307.494497607655,1.0),N_p),N_f);
  
  Air Fluid "Fluid package";
  Air.State fluid_top(h_start=h_f_min) "Top fluid property object";
  Air.State fluid_bot(h_start=h_f_min) "Bottom fluid property object";
  
  //Property bounds
  //Fluid
  parameter SI.SpecificEnthalpy h_f_min=Fluid.h_Tf(T_min,0) "Starting enthalpy of the HTF";
  parameter SI.SpecificEnthalpy h_f_max=Fluid.h_Tf(T_max,0) "Starting enthalpy of the HTF";
  parameter SI.Density rho_f_min=Fluid.rho_Tf(T_min,0);
  parameter SI.Density rho_f_max=Fluid.rho_Tf(T_max,0);
  parameter SI.Density rho_f_avg=(rho_f_min+rho_f_max)/2;
  //Design parameters
  parameter SI.Energy E_max = 144e9 "Maximum theoretical storage capacity of combined tanks";
  parameter SI.Time t_charge = 4 * 3600 "charging time";
  parameter SI.Time t_discharge = 4 * 3600 "discharging time";
  //parameter SI.MassFlowRate m_flow_charge = E_max/((h_f_max-h_f_min)*t_charge) "Design mass flow rate of charging";
  //parameter SI.MassFlowRate m_flow_discharge = E_max/((h_f_max-h_f_min)*t_discharge) "Design mass flow rate of charging";
  parameter SI.Temperature T_min = 285.0 "Design cold Temperature of everything in the tank (K)";
  parameter SI.Temperature T_max = 307.5 "Design hot Temperature of everything in the tank (K)";
  
  //Inlet and Outlet
  SI.SpecificEnthalpy h_top "J/kg";
  SI.SpecificEnthalpy h_bot "J/kg";
  SI.MassFlowRate m_flow "kg/s";
  
  //Boundary Conditions
  SI.Temperature T_top (start=T_min) "Temperature at the top";
  SI.Temperature T_bot (start=T_min) "Temperature at the bottom";
  
  SolarTherm.Models.Storage.Thermocline.Thermocline_Spheres_SingleTank_Final Tank(redeclare package Fluid_Package = Air, redeclare package Filler_Package = RT20_Paraffin_Slow, N_f = N_f, N_p = N_p,Tank_A.h_f_start=h_f_start,Tank_A.h_p_start=h_p_start,T_max=T_max,T_min=T_min,d_p=50.0e-3,Tank_A.H_tank=H_tank,Tank_A.D_tank=D_tank,Correlation=1,eta=eta,rho_p=RT20_Paraffin_Slow.rho_Tf(T_max,1.0),U_loss_tank = 0.0) annotation(
    Placement(visible = true, transformation(origin = {-5, 15}, extent = {{-33, -33}, {33, 33}}, rotation = 0)));
    
    
  Modelica.Fluid.Sources.Boundary_pT PB_outlet( redeclare package Medium = Air, nPorts = 1, p = 101325, use_T_in = true) annotation(
    Placement(visible = true, transformation(origin = {64, -43}, extent = {{10, -9}, {-10, 9}}, rotation = 0)));
  SolarTherm.Models.Fluid.Pumps.PumpSimple pump(redeclare package Medium = Air) annotation(
    Placement(visible = true, transformation(origin = {26, -42}, extent = {{10, -10}, {-10, 10}}, rotation = 0)));
  Modelica.Blocks.Sources.RealExpression m_flow_PB(y = m_flow_bot) annotation(
    Placement(visible = true, transformation(origin = {74, 21}, extent = {{20, -19}, {-20, 19}}, rotation = 0)));
  SolarTherm.Models.Fluid.Sources.FluidSink PB_Sink(redeclare package Medium = Air) annotation(
    Placement(visible = true, transformation(origin = {42, 76}, extent = {{-24, -24}, {24, 24}}, rotation = 0)));
  Modelica.Blocks.Sources.RealExpression T_in_signal(y = T_bot)  annotation(
    Placement(visible = true, transformation(origin = {70, -6}, extent = {{10, -10}, {-10, 10}}, rotation = 0)));
  Modelica.Blocks.Sources.RealExpression Tamb(y = 298.15) annotation(
    Placement(visible = true, transformation(origin = {-48, 8}, extent = {{-12, -18}, {12, 18}}, rotation = 0)));
  Modelica.Blocks.Sources.RealExpression p_amb(y = 101325) annotation(
    Placement(visible = true, transformation(origin = {37, 40}, extent = {{13, -16}, {-13, 16}}, rotation = 0)));
equation
  T_bot = SolarTherm.Validation.Datasets.Arkar_Solidification76_Dataset.T_t(time);
  m_flow = (76.0/3600.0)*rho_f_avg;
  connect(T_in_signal.y, PB_outlet.T_in) annotation(
    Line(points = {{60, -6}, {54, -6}, {54, -18}, {88, -18}, {88, -40}, {76, -40}, {76, -40}}, color = {0, 0, 127}));
  connect(PB_outlet.ports[1], pump.fluid_a) annotation(
    Line(points = {{54, -42}, {36, -42}, {36, -42}, {36, -42}}, color = {0, 127, 255}));
  connect(pump.fluid_b, Tank.fluid_b) annotation(
    Line(points = {{16, -42}, {-5, -42}, {-5, -11}}, color = {0, 127, 255}));
  connect(m_flow_PB.y, pump.m_flow) annotation(
    Line(points = {{52, 22}, {26, 22}, {26, -34}, {26, -34}}, color = {0, 0, 127}));
  connect(Tamb.y, Tank.T_amb) annotation(
    Line(points = {{-34, 8}, {-20, 8}, {-20, 15}}, color = {0, 0, 127}));
  connect(p_amb.y, Tank.p_amb) annotation(
    Line(points = {{22, 40}, {20, 40}, {20, 16}, {10, 16}, {10, 16}}, color = {0, 0, 127}));
  connect(Tank.fluid_a, PB_Sink.port_a) annotation(
    Line(points = {{-6, 42}, {-4, 42}, {-4, 76}, {18, 76}, {18, 76}}, color = {0, 127, 255}));

annotation(experiment(StopTime = 61200, StartTime = 0, Tolerance = 1e-3, Interval = 180.0),
    Diagram(coordinateSystem(extent = {{-200, -200}, {200, 200}}, preserveAspectRatio = false)),
    Icon(coordinateSystem(extent = {{-200, -200}, {200, 200}}, preserveAspectRatio = false)));

end Thermocline_Arkar_Solidification_76;