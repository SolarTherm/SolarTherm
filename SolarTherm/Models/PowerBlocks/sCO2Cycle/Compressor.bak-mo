within SolarTherm.Models.PowerBlocks.sCO2Cycle;

model Compressor "Model 0D of a sCO2 compressor"
    extends SolarTherm.Media.CO2.PropCO2;
    replaceable package MedRec = SolarTherm.Media.CO2.CO2_ph;
    Modelica.Fluid.Interfaces.FluidPort_a port_a(redeclare package Medium = MedRec) annotation(
      Placement(visible = true, transformation(origin = {-60, 50}, extent = {{-10, -10}, {10, 10}}, rotation = 0), iconTransformation(origin = {-78, 42}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    Modelica.Fluid.Interfaces.FluidPort_b port_b(redeclare package Medium = MedRec) annotation(
      Placement(visible = true, transformation(origin = {42, -54}, extent = {{-10, -10}, {10, 10}}, rotation = 0), iconTransformation(origin = {30, -74}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
    parameter Real eta_comp = 0.87 "isentropic efficiency of the compressor";
    parameter Real PR = 2.313 "Pressure ratio";
    parameter Modelica.SIunits.AbsolutePressure p_out = 250*10^5 "outlet pressure";
    parameter Modelica.SIunits.ThermodynamicTemperature T_amb = 273.15 + 40 "Outlet temperature in Kelvin";
    parameter Real flowGuess=1000;
    MedRec.ThermodynamicState state_a "thermodynamic state at the entrance";
    MedRec.ThermodynamicState state_isen "thermodynamic state at the end of the isentropic compression";
    MedRec.ThermodynamicState state_b "thermodynamic state at the end of the real compresssion";
    Modelica.SIunits.Power W_comp "power used for compression";
    SolarTherm.Types.SpecificExergy ex_d "destroyed exergy";
    Modelica.SIunits.SpecificEntropy s_entrance "exergy at the entrance of the compressor";
    Real d_entrance;
    protected
    Real mFlow (start=flowGuess);
  equation
    state_a = MedRec.setState_phX(port_a.p, inStream(port_a.h_outflow));
    s_entrance = MedRec.specificEntropy(state_a);
    state_isen = MedRec.setState_psX(p_out, s_entrance);
    state_b = MedRec.setState_phX(p_out, state_a.h + (state_isen.h - state_a.h) / eta_comp);
    port_b.p = state_b.p;
    port_b.h_outflow = state_b.h;
    mFlow = port_a.m_flow;
    W_comp = port_a.m_flow * (state_b.h - state_a.h);
    port_a.m_flow + port_b.m_flow = 0;
    ex_d =W_comp + port_a.m_flow*(state_a.h-T_amb*MedRec.specificEntropy(state_a))+port_b.m_flow*(state_b.h-T_amb*MedRec.specificEntropy(state_b));
    d_entrance = MedRec.density(state_a);
    annotation(
      Diagram(graphics = {Text(origin = {-20, 18}, extent = {{-28, 16}, {42, -46}}, textString = "COMPRESSOR"), Polygon(origin = {-12, 10}, points = {{-42, 40}, {-42, -44}, {42, -70}, {42, 70}, {-42, 40}, {-42, 40}})}, coordinateSystem(initialScale = 0.1)),
      Icon(coordinateSystem(initialScale = 0.1), graphics = {Polygon(origin = {-26, -2}, points = {{-40, 42}, {-42, -48}, {42, -78}, {42, 78}, {-40, 42}}), Text(origin = {-16, 11}, extent = {{-48, -31}, {24, 15}}, textString = "COMPRESSOR")}));
  end Compressor;

