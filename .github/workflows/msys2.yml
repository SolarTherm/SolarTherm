# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: SolarTherm MSYS2

on:
  workflow_dispatch:
    branches: [ $default-branch, master]
  push:

    branches: [ $default-branch, master]

  pull_request:
    branches:  [ $default-branch, master]

jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        sys: [ MINGW64 ]
    defaults:
      run:
        shell: msys2 {0}

    env:
      PYTEST_ADDOPTS: --color=yes
      DAKVER: 6.17.0

    steps:
    - uses: msys2/setup-msys2@v2
      with:
        msystem: ${{matrix.sys}}
        update: true
        pacboy: >-
          git: svn: wget: zip: unzip: tar: make: diffutils: patch:
          autoconf: automake: m4: pkg-config: libtool: bison:
          toolchain:p opencl-headers:p openblas:p hdf5:p python:p python-pip:p
          python-wheel:p python-pyzmq:p python-numpy:p python-scipy:p
          python-matplotlib:p python-pytest:p python-colorama:p
          python-openpyxl:p python-greenlet:p python-pyzmq:p glpk:p msmpi:p

    - uses: actions/checkout@v2

    - name: Install Python dependencies
      run: |
        echo "WHICH PYTHON =" `which python`
        python3 -m pip install scons DyMat pyswarm cma deap scoop solsticepy 

#    - name: Install OpenModelica 1.14 (approx)
#      run: |
#        mkdir -p ~/.local
#        tar zxv -C ~/.local < <(wget "https://cloudstor.aarnet.edu.au/plus/s/BktvwWvCdgboDY6/download" -q -O-)

    - name: Install OpenModelica 1.19
      run: |
        mkdir ~/omc-repo && cd ~/omc-repo
        wget -qO- "https://cloudstor.aarnet.edu.au/plus/s/ex7S4y8QzlDjQCY/download" | bsdtar -xvf-
        echo -e "[openmodelica]\nSigLevel=Never\nServer=file://$PWD" >> /etc/pacman.conf
        pacboy -Sy --noconfirm omc:p openmodelica-msl:p
        echo "REVIEW INSTALLED OMC VERSION..."
        omc --version
#old path: wget -qO- "https://cloudstor.aarnet.edu.au/plus/s/VBZETOzDPK51Ywr/download" | bsdtar -xvf-
        
    - name: Install Solstice
      run: |
        wget https://github.com/anustg/solstice-scripts/releases/download/v0.9.0-3/solstice-0.9.0.exe
        MSYS2_ARG_CONV_EXCL="*" cmd /C "start solstice-0.9.0.exe /S"
        python3 -c "import solsticepy;print(solsticepy.find_prog('solstice'))"

    - name: Install MPIEXEC
      run: |
        wget "https://github.com/microsoft/Microsoft-MPI/releases/download/v10.1.1/msmpisetup.exe"
        start msmpisetup.exe -unattend -force
        
    - name: Install DAKOTA
      run: |
        mkdir -p ~/.local
        export DAKPLAT=Windows.x64
        export PKGN=dakota-${DAKVER}-release-public-${DAKPLAT}-cli
        export DIRN=dakota-${DAKVER}.${DAKPLAT}
        cd
        mkdir -p dakota-tmp
        wget "https://github.com/snl-dakota/dakota/releases/download/v${DAKVER}/${PKGN}.zip
#old path        wget "https://dakota.sandia.gov/sites/default/files/distributions/public/${PKGN}.zip"
        cd dakota-tmp
        unzip ~/$PKGN
        cp -R $DIRN/* ~/.local/
        export PATH=$PATH:~/.local/bin
        dakota --version

    - name: Build SolarTherm
      run: |
        export PATH=$PATH:~/.local/bin
        scons

    - name: Install SolarTherm
      run: |
        export PATH=$PATH:~/.local/bin
        scons install

    - name: Test SolarTherm st env
      run: |
        export PATH=$PATH:~/.local/bin
        export PATH="$PATH:/c/Program Files/Microsoft MPI/Bin"
        echo $PATH
        mpiexec
        mpicc --version
        gcc --version
        cd tests
        python3 -m pytest test_stenv.py

#    - name: Test SolarTherm dakota
#      run: |
#        export PATH=$PATH:~/.local/bin
#        export PATH="$PATH:/c/Program Files/Microsoft MPI/Bin"
#        echo "WHICH ST? [" `which st` "]"
#        cd tests
#        st python -m pytest test_stopt.py

    - name: Test SolarTherm
      run: |
        export PATH=$PATH:~/.local/bin
        export PATH="$PATH:/c/Program Files/Microsoft MPI/Bin"
        mpiexec
        cd tests
        st python -m pytest

# vim: ts=2:sw=2:et
